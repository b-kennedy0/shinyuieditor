% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ui_code_to_tree.R
\name{ui_code_to_tree}
\alias{ui_code_to_tree}
\title{Convert ui code expression to ui tree IR}
\usage{
ui_code_to_tree(ui_expr, packages = c())
}
\arguments{
\item{ui_expr}{Language object containing code generate an app ui}

\item{packages}{List of any packages that need to be loaded into the
namespace when evaluating the \code{ui_expr}}
}
\value{
A UI tree intermediate representation that can be sent to ui editor
front-end
}
\description{
Convert ui code expression to ui tree IR
}
\examples{
# Takes optional list of libraries needed to accurately parse file
ui_expr <- rlang::expr(
  grid_card(
    area = "plot",
    plotOutput("distPlot",height = "100\%")
  )
)

shinyuieditor:::ui_code_to_tree(ui_expr, packages = c("shiny", "gridlayout"))


# If all functions are namespaced then the packages can be omited
ui_expr <- rlang::expr(
  gridlayout::grid_card(
    area = "plot",
    shiny::plotOutput("distPlot", height = "100\%")
  )
)

shinyuieditor:::ui_code_to_tree(ui_expr)

}
