% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/launch_editor.R
\name{launch_editor}
\alias{launch_editor}
\title{Launch ui editor server}
\usage{
launch_editor(
  app_loc,
  host = "127.0.0.1",
  port = httpuv::randomPort(),
  shiny_background_port = httpuv::randomPort(),
  remove_namespace = TRUE,
  app_preview = TRUE,
  show_logs = TRUE,
  show_preview_app_logs = TRUE,
  launch_browser = TRUE,
  stop_on_browser_close = TRUE
)
}
\arguments{
\item{app_loc}{Path to directory containing Shiny app to be visually edited.
Currently this only supports two-file app formats, and thus there needs to
be a \code{ui.R} file in this directory. If file does not exist a default
starter template will be used upon finishing will be saved to the path.}

\item{host}{A string that is a valid IPv4 address that is owned by this
server, or \code{"0.0.0.0"} to listen on all IP addresses.}

\item{port}{A number or integer that indicates the server port that should be
listened on. Note that on most Unix-like systems including Linux and Mac OS
X, port numbers smaller than 1025 require root privileges.}

\item{shiny_background_port}{Port to launch the running app preview on. Again
only used for dev work.}

\item{remove_namespace}{Should namespaces be stripped from the generated UI
code? Set to \code{FALSE} if you prefer the style of \code{shiny::sliderInput()} to
\code{sliderInput()}. If set to \code{TRUE}, then any libraries needed for the nodes
will be loaded at the top of your \code{app.R} or \code{ui.R}.}

\item{app_preview}{Should a live version of the Shiny app being edited run
and auto-show updates made? You may want to disable this if the app has
long-running or processor intensive initialization steps.}

\item{show_logs}{Print status messages to the console? For debugging.}

\item{show_preview_app_logs}{Should the logged output of the app preview be
printed? Useful for debugging an app that's not working properly.}

\item{launch_browser}{Should the browser be automatically opened to the
editor?}

\item{stop_on_browser_close}{Should the editor server end when the browser window
is closed or is dormant for too long. Set this to false if you want to try
running the app in a different browser or refreshing the browser etc..}
}
\value{
A list containing the \verb{$server}: The app server object (as returned
by \code{httpuv::startServer}) and the function \verb{$stop()} for safely terminating
the server and preview shiny app.
}
\description{
Spins up an \code{httpuv} server that handles parsing and deparsing of the UI tree
and saving.
}
