% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/launch_editor.R
\name{launch_editor}
\alias{launch_editor}
\title{Launch visual editor server}
\usage{
launch_editor(
  app_loc,
  host = "127.0.0.1",
  port = httpuv::randomPort(),
  shiny_background_port = httpuv::randomPort(),
  app_preview = TRUE,
  show_logs = TRUE,
  run_in_background = FALSE
)
}
\arguments{
\item{app_loc}{Path to directory containing Shiny app to be visually edited.
Currently this only supports two-file app formats, and thus there needs to
be a \code{ui.R} file in this directory. If file does not exist a default
starter template will be used upon finishing will be saved to the path.}

\item{host}{A string that is a valid IPv4 address that is owned by this
server, or \code{"0.0.0.0"} to listen on all IP addresses.}

\item{port}{A number or integer that indicates the server port that should be
listened on. Note that on most Unix-like systems including Linux and Mac OS
X, port numbers smaller than 1025 require root privileges.}

\item{shiny_background_port}{Port to launch the running app preview on. Again
only used for dev work.}

\item{app_preview}{Should a live version of the Shiny app being edited run
and auto-show updates made? You may want to disable this if the app has
long-running or processor intensive initialization steps.}

\item{show_logs}{Print status messages to the console? For debugging.}

\item{run_in_background}{Should the app run in a background process or block
the console? See \code{?httpuv::startServer()} vs \code{?httpuv::runServer()}. Note
that this potentially will result in orphaned Shiny processes because
there's no way to know when the user is done with the app preview. Use with
caution.}
}
\value{
A list containing the \verb{$server}: The app server object (as returned
by \code{httpuv::startServer}) and the function \verb{$stop()} for safely terminating
the server and preview shiny app.
}
\description{
Spins up an \code{httpuv} server that handles parsing and deparsing of the UI tree
and saving.
}
\details{
\subsection{Stopping server When running with \code{run_in_background = TRUE}, it's}{

recomended you use the \verb{$stop()} function in the returned list object instead
of the build in \verb{$stop()} function on the returned \verb{$server} object as this
will ensure the running Shiny app preview will also shutdown.
}
}
