.appViewerHolder {
  --inset-amnt: 100px;
  --app-rendered-w: calc(100vw - var(--inset-amnt));
  --app-rendered-h: calc(100vh - var(--inset-amnt));
  /* --app-rendered-w: 1000px; */
  /* --app-aspect-ratio: 0.8; */
  /* This is a hard coded value that needs to be this way because css's calc
  function can't divide two same-unit numbers to get a ratio */
  --app-scale-amnt: 0.24;
  --animation-speed-timing: 0.5s ease;
  --expand-btn-inset: 3px;
  --expand-btn-size: 1rem;
  --logs-font-size: 0.65rem;

  --logs-padding: 10px;

  width: 100%;
  display: grid;

  --controls-height: 30px;
  --logs-height: 35px;
  --viewer-height: calc(var(--app-rendered-h) * var(--app-scale-amnt));
  grid-template-rows: var(--controls-height) var(--viewer-height) var(
      --logs-height
    );
  grid-template-areas:
    "controls"
    "viewer"
    "logs";

  gap: 5px;
}

.appViewerHolder.fullScreen {
  --expand-btn-inset: 10px;
  --expand-btn-size: 1.5rem;
  --logs-font-size: 0.9rem;
  --logs-padding: 32px;

  --controls-height: 50px;
  --logs-height: 50px;
  --viewer-height: 1fr;
}

.controls {
  grid-area: controls;
  display: flex;
  justify-content: flex-end;
}

.container {
  grid-area: viewer;
  overflow: hidden;
  display: grid;
  place-content: center;
  position: relative;
  width: 100%;
  height: 100%;
}

.logs {
  grid-area: logs;
  overflow: hidden;
}

.expandedLogs {
  grid-row-start: 2;
  grid-row-end: -1;
  z-index: 2;
  background-color: var(--rstudio-white-transparent);
}

.logsHeader {
  display: flex;
  justify-content: center;
  background-color: inherit;
  height: var(--logs-height);
  padding: 2px;
}

.logsContents {
  height: calc(100% - var(--logs-height));
  font-family: var(--mono-fonts);
  font-size: var(--logs-font-size);
  padding: var(--logs-padding);
  position: relative;
}

p.logLine {
  margin: 0;
}
.clearLogs {
  position: absolute;
  right: 2px;
  top: 2px;
  outline: none;
}

.expandedLogs .logsContents {
  overflow: auto;
}

.expandButton {
  font-size: var(--expand-btn-size);
}

.previewFrame {
  background-color: var(--rstudio-white);
  width: var(--app-rendered-w);
  height: var(--app-rendered-h);
  transform: scale(var(--app-scale-amnt));
  border: 1px solid var(--outline-color);
  display: block;
  /* Ever-so-slightly soften corners */
  border-radius: 2px;
}

.appViewerHolder.fullScreen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  width: 100vw;
  height: 100vh;
  z-index: 10;
  background-color: hsl(var(--rstudio-grey-hsl) / 0.15);
  backdrop-filter: blur(6px);

  transition: all var(--animation-speed-timing);
  /* This overwrites the "all" above and only makes transitions occur on
  specified properties */
  transition-property: backdrop-filter background-color;
}

.appViewerHolder.fullScreen .previewFrame {
  /* width: var(--calc(100vw - var(--inset-amnt));
  height: calc(100vh - var(--inset-amnt)); */
  transform: scale(1);
  transition: transform var(--animation-speed-timing);
  border: none;
  box-shadow: var(--shadow-elevation-medium);
}

.appViewerHolder:not(.fullScreen) .previewFrame {
  transition: none;
}

.appViewerHolder > h2 {
  font-size: 1.25rem;
  color: var(--rstudio-grey);
  text-align: center;
  font-style: italic;
}

h2.error {
  color: var(--red);
}

.fakeApp {
  display: grid;
  place-content: center;
  font-size: 4rem;
}

.fakeDashboard {
  display: grid;
  gap: 5px;
  grid:
    "header   header" 100px
    "sidebar  top   " 2fr
    "sidebar  bottom" 1fr
    / 150px 1fr;
}

.fakeDashboard > div {
  width: 100%;
  height: 100%;
}

.fakeDashboard > .header {
  grid-area: header;
  background-color: hsl(288 59% 58% / 0.7);
  display: grid;
  place-content: center;
}
.header > h1 {
  color: white;
}
.fakeDashboard > .sidebar {
  grid-area: sidebar;
  background-color: hsl(30 59% 53% / 0.7);
}
.fakeDashboard > .top {
  grid-area: top;
  background-color: hsl(120 61% 34% / 0.7);
}
.fakeDashboard > .bottom {
  grid-area: bottom;
  background-color: hsl(207 44% 49% / 0.7);
}
