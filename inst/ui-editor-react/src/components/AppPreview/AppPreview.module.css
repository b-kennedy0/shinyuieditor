.appViewerHolder {
  --inset-amnt: 100px;

  /* This is over-ridden by an inline style but we just have it here in case */
  --app-scale-amnt: 0.24;
  --animation-speed-timing: 0.5s ease;
  --expand-btn-size: 1rem;

  /* These take effect in LogsViewer.module.css but depend on the expansion so we set them here */
  --logs-font-size: 0.65rem;
  --logs-padding: 10px;

  --controls-h: 30px;
  --logs-h: 35px;

  --app-rendered-w: calc(100vw - var(--inset-amnt));
  --app-rendered-h: calc(
    100vh - var(--inset-amnt) - var(--controls-h) - var(--logs-h)
  );

  --viewer-h: calc(var(--app-rendered-h) * var(--app-scale-amnt));

  grid-template-rows: var(--controls-h) var(--viewer-h) var(--logs-h);
  grid-template-areas:
    "controls"
    "viewer"
    "logs";

  display: grid;
  gap: 3px;
}

.appViewerHolder.fullScreen {
  --expand-btn-size: 1.5rem;

  --logs-font-size: 0.9rem;
  --logs-padding: 32px;

  --controls-h: 50px;
  --viewer-h: 1fr;
  --logs-h: 50px;
}

.controls {
  grid-area: controls;
  display: flex;
  justify-content: flex-end;
}

.container {
  grid-area: viewer;
  display: grid;
  place-content: center;
  position: relative;
  width: 100%;
  height: 100%;
  min-width: 0;
  min-height: 0;
}

/* Logs section */
.logs {
  grid-area: logs;
  overflow: hidden;
}

.expandButton {
  font-size: var(--expand-btn-size);
}

.appViewerHolder button {
  outline: none;
  background-color: transparent;
}

.appViewerHolder.fullScreen button {
  background-color: var(--rstudio-white);
}

.appViewerHolder button:hover,
.appViewerHolder button:active {
  outline: 1px solid var(--rstudio-grey);
  outline-offset: -1px;
}

.previewFrame {
  background-color: var(--rstudio-white);
  width: var(--app-rendered-w);
  height: var(--app-rendered-h);
  transform: scale(var(--app-scale-amnt));
  border: 1px solid var(--outline-color);
  display: block;
  /* Ever-so-slightly soften corners */
  border-radius: 2px;
}

.appViewerHolder.fullScreen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  width: 100vw;
  height: 100vh;
  z-index: 10;
  background-color: hsl(var(--rstudio-grey-hsl) / 0.15);
  backdrop-filter: blur(6px);

  transition: all var(--animation-speed-timing);
  /* This overwrites the "all" above and only makes transitions occur on
  specified properties */
  transition-property: backdrop-filter background-color;
}

.appViewerHolder.fullScreen .previewFrame {
  /* height: 100%; */
  transform: scale(1);
  transition: transform var(--animation-speed-timing);
  border: none;
  box-shadow: var(--shadow-elevation-medium);
}

.appViewerHolder:not(.fullScreen) .previewFrame {
  /* Don't reverse the growing animation, just snap back to smaller */
  transition: none;
}

.appViewerHolder > h2 {
  font-size: 1.25rem;
  color: var(--rstudio-grey);
  text-align: center;
  font-style: italic;
}

h2.error {
  color: var(--red);
}
