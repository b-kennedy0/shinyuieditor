div.appViewerHolder {
  --inset-amnt: 100px;

  /* This is over-ridden by an inline style but we just have it here in case */
  --app-scale-amnt: 0.24;
  --animation-speed-timing: 0.5s ease;
  --expand-btn-size: 1rem;

  /* These take effect in LogsViewer.module.css but depend on the expansion so we set them here */
  --logs-font-size: 0.65rem;
  --logs-padding: 10px;

  --controls-h: 30px;
  --logs-h: 35px;

  --app-rendered-w: calc(100vw - var(--inset-amnt));
  --app-rendered-h: calc(
    100vh - var(--inset-amnt) - var(--controls-h) - var(--logs-h)
  );

  --pad: 40px;
  --viewer-h: calc(var(--app-rendered-h) * var(--app-scale-amnt));

  --logs-offset: 0px;

  height: calc(var(--viewer-h) + var(--pad) * 2.5);
  grid-template-rows: var(--controls-h) var(--viewer-h) var(--logs-h);

  position: relative;
  padding-inline: var(--pad);
  padding-top: var(--pad);
  padding-bottom: calc(10px + var(--pad));
}

.container {
  position: relative;
  /* outline: 1px solid red; */
  width: 100%;
  height: 100%;

  display: grid;
  place-content: center;
  /* overflow: hidden; */
}

.expandButton {
  position: absolute;
  width: 100%;
  height: 100%;
  font-size: 50px;
  opacity: 0;
  color: transparent;
  background-color: transparent;
  outline: none;
}

.expandButton:hover {
  color: inherit;
  opacity: 1;
  transition-property: opacity, color;
  transition-duration: 0.25s;
  transition-timing-function: ease-in;
}

button.restartButton {
  position: absolute;
  top: 3px;
  left: 3px;
  width: fit-content;
  outline: none;
  background-color: transparent;
}
button.restartButton:hover,
button.restartButton:active {
  outline: 1px solid var(--rstudio-grey);
  outline-offset: -1px;
}

.appViewerHolder.fullScreen .expandButton {
  color: inherit;
  width: fit-content;
  height: fit-content;
  font-size: 2.5rem;
  opacity: 1;
  top: -10px;
  right: -10px;
}

.appViewerHolder.fullScreen {
  --expand-btn-size: 1.5rem;

  --logs-font-size: 0.9rem;
  --logs-padding: 32px;

  --controls-h: 50px;
  --viewer-h: 1fr;
  --logs-h: 50px;

  --logs-offset: 35px;
}

.previewFrame {
  background-color: var(--rstudio-white);
  width: var(--app-rendered-w);
  height: var(--app-rendered-h);
  transform: scale(var(--app-scale-amnt));
  border: 1px solid var(--outline-color);
  display: block;
  /* Ever-so-slightly soften corners */
  border-radius: 2px;
}

.appViewerHolder.fullScreen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  width: 100vw;
  height: 100vh;
  z-index: 10;
  background-color: hsl(var(--rstudio-grey-hsl) / 0.15);
  backdrop-filter: blur(6px);

  transition: all var(--animation-speed-timing);
  /* This overwrites the "all" above and only makes transitions occur on
  specified properties */
  transition-property: backdrop-filter background-color;
}

.appViewerHolder.fullScreen .previewFrame {
  /* height: 100%; */
  transform: scale(1);
  transition: transform var(--animation-speed-timing);
  border: none;
  box-shadow: var(--shadow-elevation-medium);
}

.appViewerHolder:not(.fullScreen) .previewFrame {
  /* Don't reverse the growing animation, just snap back to smaller */
  transition: none;
}

.appViewerHolder > h2 {
  font-size: 1.25rem;
  color: var(--rstudio-grey);
  text-align: center;
  font-style: italic;
}

h2.error {
  color: var(--red);
}
